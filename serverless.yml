org: jorgeleonv
service: proyecto-api-usuarios

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::831178165254:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_usuarios # Nombre din√°mico de la tabla DynamoDB

functions:
  ${sls:stage}-CrearUsuario:
    handler: CrearUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/crear
          method: post
          cors: true
          integration: lambda

  ${sls:stage}-LoginUsuario:
    handler: LoginUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/login
          method: post
          cors: true
          integration: lambda

  ${sls:stage}-ObetnerPerfil:
    handler: ObetnerPerfil.lambda_handler
    events:
      - http:
          path: /usuarios/perfil
          method: get
          cors: true
          integration: lambda
          authorizer:
            arn: arn:aws:lambda:us-east-1:831178165254:function:ValidarTokenAcceso
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 300

  ${sls:stage}-EliminarUsuario:
    handler: EliminarUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/eliminar
          method: delete
          cors: true
          integration: lambda
          authorizer:
            arn: arn:aws:lambda:us-east-1:831178165254:function:ValidarTokenAcceso
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 300

resources:
  Resources:
    TablaUsuarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id#user_id
            AttributeType: S
          - AttributeName: role
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id#user_id
            KeyType: HASH
          - AttributeName: role
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
